@model GaziFurWebSite.Models.Color_CategoryViewModel
@{
	ViewData["Title"] = "Index";
	Layout = "~/Views/Shared/Layout.cshtml";
}
<!DOCTYPE html>
<html lang="tr">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Ürün Ekle</title>
	<style>
		:root {
			--primary-color: #333;
			--secondary-color: #555;
			--accent-color: #4CAF50;
			--border-color: #ddd;
			--background-color: #f9f9f9;
			--white: #fff;
		}

		body {
			font-family: Arial, sans-serif;
			line-height: 1.6;
			margin: 0;
			padding: 0;
			background-color: var(--background-color);
		}

		.container {
			width: 90%;
			max-width: 800px;
			margin: 20px auto;
			padding: 20px;
			background-color: var(--white);
			border-radius: 5px;
			box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
		}

		h1 {
			color: var(--primary-color);
			font-size: 24px;
			margin-bottom: 20px;
			border-bottom: 1px solid var(--border-color);
			padding-bottom: 10px;
		}

		.form-group {
			margin-bottom: 20px;
		}

		label {
			display: block;
			margin-bottom: 8px;
			font-weight: bold;
			color: var(--secondary-color);
		}

		input[type="text"],
		input[type="number"],
		input[type="url"],
		input[type="file"],
		textarea,
		select {
			width: 100%;
			padding: 10px;
			border: 1px solid var(--border-color);
			border-radius: 4px;
			font-size: 14px;
			box-sizing: border-box;
		}

		textarea {
			height: 100px;
			resize: vertical;
		}

		.checkbox-group {
			display: flex;
			align-items: center;
		}

			.checkbox-group label {
				margin-left: 10px;
				margin-bottom: 0;
				font-weight: normal;
			}

		.radio-group {
			display: flex;
			gap: 20px;
		}

		.radio-item {
			display: flex;
			align-items: center;
		}

			.radio-item label {
				margin-left: 5px;
				margin-bottom: 0;
				font-weight: normal;
			}

		button[type="submit"] {
			background-color: var(--accent-color);
			color: var(--white);
			border: none;
			padding: 12px 20px;
			font-size: 16px;
			cursor: pointer;
			border-radius: 4px;
			display: inline-block;
			transition: background-color 0.3s;
		}

			button[type="submit"]:hover {
				background-color: #45a049;
			}

		.button-group {
			margin-top: 30px;
			text-align: right;
		}

		.preview-image {
			max-width: 200px;
			max-height: 200px;
			margin-top: 10px;
			border: 1px solid var(--border-color);
			display: none;
		}

		/* Çoklu resim önizleme için yeni stiller */
		.image-preview-container {
			display: flex;
			flex-wrap: wrap;
			gap: 10px;
			margin-top: 10px;
		}

		.image-preview-item {
			position: relative;
			width: 150px;
			height: 150px;
			border: 1px solid var(--border-color);
			overflow: hidden;
			border-radius: 4px;
		}

			.image-preview-item img {
				width: 100%;
				height: 100%;
				object-fit: cover;
			}

			.image-preview-item .remove-image {
				position: absolute;
				top: 5px;
				right: 5px;
				width: 20px;
				height: 20px;
				background-color: rgba(255, 0, 0, 0.7);
				color: white;
				border-radius: 50%;
				display: flex;
				align-items: center;
				justify-content: center;
				cursor: pointer;
				font-size: 14px;
				font-weight: bold;
			}

		.file-note {
			margin-top: 5px;
			font-size: 12px;
			color: var(--secondary-color);
		}
	</style>
</head>
<body>
	<div class="container">
		<h1>Ürün Ekle</h1>
		<form id="productForm" method="post" enctype="multipart/form-data">
			<div class="form-group">
				<label for="productName">Ürün Adı</label>
				<input type="text" id="productName" name="productName" required>
			</div>

			<div class="form-group">
				<label for="productDescription">Açıklama</label>
				<textarea id="productDescription" name="productDescription"></textarea>
			</div>

			<div class="form-group">
				<label for="categoryId">Kategori</label>
				<select id="categoryId" name="categoryId" required>
					<option value="">Kategori Seçin</option>
					@foreach (var item in Model.Categories)
					{
						<option value="@item.CategorId">@item.Name</option>
					}
				</select>
			</div>

			<div class="form-group">
				<label for="colorId">Renk</label>
				<select id="colorId" name="colorId" required>
					<option value="">Renk Seçin</option>
					@foreach (var item in Model.Colors)
					{
						<option value="@item.ColorId">@item.ColorName</option>
					}
				</select>
			</div>

			<div class="form-group">
				<label for="price">Fiyat (₺)</label>
				<input type="number" id="price" name="price" step="0.01" min="0" required>
			</div>

			<div class="form-group">
				<label>Cinsiyet</label>
				<div class="radio-group">
					<div class="radio-item">
						<input type="radio" id="genderMale" name="gender" value="Erkek" checked>
						<label for="genderMale">Erkek</label>
					</div>
					<div class="radio-item">
						<input type="radio" id="genderFemale" name="gender" value="Kadın">
						<label for="genderFemale">Kadın</label>
					</div>
				</div>
			</div>

			<div class="form-group">
				<label for="productImageFiles">Ürün Fotoğrafları Yükle</label>
				<input type="file" id="productImageFiles" name="productImageFiles" accept="image/*" multiple onchange="previewFiles(this)">
				<div class="file-note">Birden fazla fotoğraf seçmek için CTRL tuşuna basarak seçim yapabilirsiniz.</div>
			</div>

			<div id="imagePreviewContainer" class="image-preview-container">
				<!-- Yüklenen fotoğrafların önizlemeleri buraya gelecek -->
			</div>

			<div class="form-group">
				<label for="size">Beden</label>
				<input type="text" id="size" name="size" placeholder="Örn: S,M,L,XL">
			</div>

			<div class="form-group">
				<label>Ürünü öne çıkar</label>
				<div class="radio-group">
					<div class="radio-item">
						<input type="radio" id="isFeaturedTrue" name="isFeatured" value="true" checked>
						<label for="isFeaturedTrue">Çıksın</label>
					</div>
					<div class="radio-item">
						<input type="radio" id="isFeaturedFalse" name="isFeatured" value="false">
						<label for="isFeaturedFalse">Çıkmasın</label>
					</div>
				</div>
			</div>

			<div class="button-group">
				<button type="submit">Ürün Ekle</button>
			</div>
		</form>
	</div>

	<script>
		function previewFiles(input) {
			const previewContainer = document.getElementById('imagePreviewContainer');
			previewContainer.innerHTML = ''; // Önizleme alanını temizle

			if (input.files && input.files.length > 0) {
				for (let i = 0; i < input.files.length; i++) {
					const file = input.files[i];
					if (file.type.startsWith('image/')) {
						const previewItem = document.createElement('div');
						previewItem.className = 'image-preview-item';

						const img = document.createElement('img');
						img.src = URL.createObjectURL(file);
						img.alt = 'Ürün görseli önizleme';

						const removeButton = document.createElement('div');
						removeButton.className = 'remove-image';
						removeButton.innerHTML = '×';
						removeButton.dataset.index = i;
						removeButton.onclick = function() {
							removeFile(this.dataset.index);
						};

						previewItem.appendChild(img);
						previewItem.appendChild(removeButton);
						previewContainer.appendChild(previewItem);
					}
				}
			}
		}

		function removeFile(index) {
			const input = document.getElementById('productImageFiles');
			const dt = new DataTransfer();

			for (let i = 0; i < input.files.length; i++) {
				const file = input.files[i];
				if (i != index) {
					dt.items.add(file);
				}
			}

			input.files = dt.files;
			previewFiles(input);
		}
	</script>
</body>
</html>